Welcome to Dbrief.AI!

## Set up Process

1) Create a virtual env `virtualenv ~/eb-new`
2) Activate by running `source ~/eb-new/bin/activate`
3) Clone repository and install `brew install git-lfs`
4) Install mysql and create a password
5) Delete all the migration files in the migration folders and run `python manage.py makemigrations` followed by `python manage.py migrate`
6) Import all the requirements from requirements.txt through `pip install -r requirements.txt`
7) Run `python manage.py runserver`
8) Install / set up docker
9) Pull the elastic search docker image (commands included in the elastic search section)
10) Update the password in settings.py
11) Run the migrate commands


## Testing Process
We currently set up a few different directories for tests including repositories and handlers.  The repository tests check the read / write operations with the database and the view tests make calls directly to the /endpoint and check that it runs with a 200 response.  All databases can be pre populated using a fixtures file which includes dummy data and is loaded into the db prior to running the tests. An example can be found in articleRec/fixtures.  In order to run all of the tests, run ```./manage.py test```. In order to run tests in a particular directory, run ```./manage.py rest topicModeling``` for example.



## Logging
We currently use logtail for all logging purposes from our production system. Please log into in order to access the logs.  Please ask for permissions to access logging.


## Deployment
In order to contribute to this repo, first create a branch and commit your changes to that branch.
`git checkout [branchName]`
`git add -A`
`git commit -m ''`
`git push origin [branchName]`
Don't add any of the files in \modelWeights since those are specific to your locally trained model and won't work / will break production temporarily.
Once your change is approved, we will merge and deploy to AWS Beanstalk through `eb deploy --staged`.  This requires prod deployment credentials and shouldn't be done without asking.


## Mysql Migration
In order to migrate database changes you need to run `python manage.py makemigrations` which will generate all the make migration files. After that you can run `python manage.py migrate` in order to map those migrations to the db tables. You can handle migrations per service through `python manage.py migrate [serviceName]`.


## Checking prod Mysql
In order to check production mysql, you can log into http://infra.eba-ydmy6xs3.us-west-2.elasticbeanstalk.com/admin.  For now the login is `admin` and password is `admin`. This will be updated in the near future. Do not use this for anything other than reads.


## Elastic Search
In order to set up elastic search on docker you need to run the following commands -
1. ```sudo systemctl start docker```
2. ```sudo docker pull docker.elastic.co/elasticsearch/elasticsearch:7.9.2```
3. ```sudo docker run -d -p 9200:9200 -e 'discovery.type=single-node' elasticsearch:7.9.2```

